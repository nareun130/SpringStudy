spring.output.ansi.enabled=always

# server.port=8081

## SpringMVC의 뷰 리졸버(View Resolver) 설정
## SpringMVC는 /src/main/resources/META-INF/resources 까지의 경로는 알고 있다.
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

## log 레벨 설정 -> production환경에서는 info를 사용. 로그 쌓이는 것이 성능에 영향을 줘서
# org.springframework라는 패키지로 지정 -> 여기의 모든 클래스는 로깅됨. 클래스로 정할 수도 있다.
logging.level.org.springframework=info 
logging.level.com.nareun.springboot.mywebapp=info

## application 전체의 날짜 형식 통일
spring.mvc.format.date=yyyy-MM-dd

# spring.datasource.url=jdbc:h2:mem:testdb
## data.sql적용을 위한 설정
spring.jpa.defer-datasource-initialization=true
# spring.jpa.show-sql=true

#\connect todos-user@localhost:3306

spring.datasource.url=jdbc:mysql://localhost:3306/todos
spring.datasource.username=todos-user
spring.datasource.password=dummytodos
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
## spring boot 시작할 대 자동으로 테이블 생성
spring.jpa.hibernate.ddl-auto=update

# docker run --detach 
# --env MYSQL_ROOT_PASSWORD=dummypassword 
# --env MYSQL_USER=todos-user 
# --env MYSQL_PASSWORD=dummytodos 
# --env MYSQL_DATABASE=todos 
# --name mysql 
# --publish 3306:3306 
# mysql:8-oracle